apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app: site-grav
  name: site-grav
  namespace: namespace
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: site-grav
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: site-grav
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      initContainers:
      - name: grav-init
        image: itherz/grav
        volumeMounts:
        - name: site-grav
          mountPath: /volume
        command:
        - cp
        - "-rpv"
        - "/usr/share/nginx/html/user/."
        - "/volume"
      containers:
      - image: itherz/grav
        imagePullPolicy: Always
        name: grav
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: site-grav
          mountPath: /usr/share/nginx/html/user
        command:
        - chown
        - "www-data:www-data"
        - "/usr/share/nginx/html/cache/gpm"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: site-grav
        persistentVolumeClaim:
          claimName: site-grav-stock
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: site-grav-stock
  namespace: namespace
  labels:
    app: site-grav
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: site-grav
  name: site-grav-svc
  namespace: namespace
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: site-grav
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: site-grav-ingress
  namespace: namespace
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-staging"

spec:
  tls:
  - hosts:
    - www.your_domain.com
    secretName: site-grav-tls
  rules:
  - host: www.your_domain.com
    http:
      paths:
      - path: /
        backend:
          serviceName: site-grav-svc
          servicePort: 80

